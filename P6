//(11).Write menu driven program to implemnt operations of singly linked list of integer.
//(1)insert (2)delete (3)modify (4)display
#include<stdio.h>
struct node
{
  int data;
  struct node *link;
};
struct node *start=NULL;

//insert
void insertNode()
{
  struct node *n,*temp;

  n=(struct node *)malloc(sizeof(struct node));
  printf("Enter a Number:=");
  scanf("%d",&n->data);
  n->link=NULL;

  if(start==NULL)
  {
    start=n;
  }
  else
  {
    temp=start;
    while(temp->link!=NULL)
    {
      temp=temp->link;
    }
    temp->link=n;
  }
}

//delete
void deleteNode()
{
  struct node *r;
  if(start==NULL)
  {
    printf("List is empty.\n");
  }
  else
  {
    r=start;
    start=start->link;
    free(r);
  }
}

//Modify
void modify(int mnum,int nnum)
{
  if(start==NULL)
  {
    printf("List is Empty.!!\n");
  }
  else{
    struct node *temp=start;
    int t=0;
    while(temp!=NULL)
    {
      if(temp->data==mnum)
      {
	temp->data=nnum;
	t=1;
	break;
      }
      temp=temp->link;
    }
    if(t==0)
    {
      printf("Modify Element Not Match.!!\n");
    }
  }
}

//Traverse
void traverseNode()
{
  if(start==NULL)
  {
    printf("List is Empty.!!\n");
  }
  else
  {
    //printf("%d",start->data);
    struct node *temp;
    temp=start;
    while(temp!=NULL)
    {
      printf("%d,",temp->data);
      temp=temp->link;
    }
    printf("\n");
  }
}

void main()
{
  clrscr();
  printf("1 Add List:\n");
  printf("2 Delete List First Element:\n");
  printf("3 Modify List\n");
  printf("4 View List:\n");
  printf("5 Exit:\n");

  while(1)
  {
    int c,mnum,nnum;
    printf("Enter the choice:");
    scanf("%d",&c);
    switch(c)
    {
      case 1:insertNode();
	     break;
      case 2:deleteNode();
	     break;
      case 3:printf("Modify Number:=");
	     scanf("%d",&mnum);
	     printf("Enter new Number");
	     scanf("%d",&nnum);
	     modify(mnum,nnum);
	     break;
      case 4:traverseNode();
	     break;
      case 5:exit(0);
	     break;
      default:printf("Enter the valid choice.!!");
	     break;
    }
  }
}
